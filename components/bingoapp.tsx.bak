'use client'

import React, { useState, useEffect } from 'react';
import { shuffleArray } from '../utils/shuffle';

interface Resolution {
  id: number;
  title: string;
}

export default function BingoBoard() {
  const [resolutions, setResolutions] = useState<Resolution[]>([]);
  const [selectedCells, setSelectedCells] = useState<boolean[]>(Array(25).fill(false));
  const [hasBingo, setHasBingo] = useState(false);

  useEffect(() => {
    fetch('https://hebbkx1anhila5yf.public.blob.vercel-storage.com/data-jwD2WKQKOGqG6G6roz5EZBPjGHs3yT.json')
      .then(response => response.json())
      .then(data => {
        const shuffledResolutions = shuffleArray(data.resolutions).slice(0, 25);
        setResolutions(shuffledResolutions);
      });
  }, []);

  const toggleCell = (index: number) => {
    const newSelectedCells = [...selectedCells];
    newSelectedCells[index] = !newSelectedCells[index];
    setSelectedCells(newSelectedCells);
    checkBingo(newSelectedCells);
  };

  const checkBingo = (cells: boolean[]) => {
    const lines = [
      [0, 1, 2, 3, 4],
      [5, 6, 7, 8, 9],
      [10, 11, 12, 13, 14],
      [15, 16, 17, 18, 19],
      [20, 21, 22, 23, 24],
      [0, 5, 10, 15, 20],
      [1, 6, 11, 16, 21],
      [2, 7, 12, 17, 22],
      [3, 8, 13, 18, 23],
      [4, 9, 14, 19, 24],
      [0, 6, 12, 18, 24],
      [4, 8, 12, 16, 20],
    ];

    const bingo = lines.some(line => line.every(cell => cells[cell]));
    setHasBingo(bingo);
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gradient-to-br from-purple-900 to-indigo-900 text-white">
      <h1 className="text-5xl font-bold mb-8 text-center text-neon-blue animate-pulse">New Year New Me Bingo</h1>
      <div className="grid grid-cols-5 gap-2 p-4 bg-black bg-opacity-50 rounded-lg shadow-lg">
        {resolutions.map((resolution, index) => (
          <button
            key={resolution.id}
            onClick={() => toggleCell(index)}
            className={`w-24 h-24 sm:w-32 sm:h-32 flex items-center justify-center p-2 text-center text-xs sm:text-sm rounded-lg transition-all duration-300 ${
              selectedCells[index]
                ? 'bg-neon-pink text-black font-bold transform scale-105'
                : 'bg-gray-800 hover:bg-gray-700'
            }`}
          >
            {resolution.title}
          </button>
        ))}
      </div>
      {hasBingo && (
        <div className="mt-8 text-4xl font-bold text-neon-green animate-bounce">
          BINGO!
        </div>
      )}
    </div>
  );
}

